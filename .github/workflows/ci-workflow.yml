# .github/workflows/cd.yml

name: Continuous Deployment - Deploy Iris API to Kubernetes

# This workflow triggers ONLY on a push to the 'main' branch
# (i.e., after a PR is successfully merged).
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # --- Part 1: Build and Push Docker Image ---
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: . # Use the root of the repo as the build context
          file: ./Dockerfile
          push: true # Actually push the image to Docker Hub
          # We tag the image with the unique Git commit SHA for perfect versioning
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/iris-api:${{ github.sha }}

      # --- Part 2: Deploy to Kubernetes ---
      - name: Set up Kubeconfig
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to Kubernetes cluster
        run: |
          # Use 'sed' to replace the 'IMAGE_PLACEHOLDER' in our manifest with the real image tag
          sed -i 's|IMAGE_PLACEHOLDER|${{ secrets.DOCKERHUB_USERNAME }}/iris-api:${{ github.sha }}|g' deployment.yaml
          
          # Apply the updated configuration to the cluster. Kubernetes handles the rolling update.
          kubectl apply -f deployment.yaml
          
          # Wait for the new version to be successfully rolled out
          kubectl rollout status deployment/iris-api-deployment

      # --- Part 3: Report Deployment Status with CML ---
      - name: Set up Node.js for CML
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install CML via NPM
        run: npm install -g @dvcorg/cml
      - name: Post deployment status as a comment on the merge commit
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cml comment create --commit-sha=${{ github.sha }} "âœ… **Deployment Successful**\n\nA new version of the Iris API has been deployed to Kubernetes.\n* **Image Tag:** `${{ secrets.DOCKERHUB_USERNAME }}/iris-api:${{ github.sha }}`"